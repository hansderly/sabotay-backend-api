// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  MEMBER
}

enum Cycle {
  DAILY
  WEEKLY
  BIWEEKLY
  MONTHLY
}

model User {
  id           String         @id @default(uuid())
  first_name   String
  last_name    String
  phone        String         @unique
  role         UserType       @default(MEMBER)
  groupMembers GroupMember[]
  contribution Contribution[]
  group        Group[]
  organizer    Organizer?
  createdAt    DateTime       @default(now())
  updateAt     DateTime       @updatedAt
}

model Organizer {
  id       String @id @default(uuid())
  username String @unique
  email    String
  password String

  user    User   @relation(fields: [user_id], references: [id])
  user_id String @unique
}

model Group {
  id                  String         @id @default(uuid())
  name                String         @unique
  contribution_amount Float
  cycle               Cycle
  cycle_duration      Int
  start_date          DateTime
  end_date            DateTime
  active              Boolean        @default(true)
  user                User           @relation(fields: [user_id], references: [id])
  user_id             String
  groupMembers        GroupMember[]
  contritbution       Contribution[]
  createdAt           DateTime       @default(now())
  updateAt            DateTime       @updatedAt
}

model GroupMember {
  id        String   @id @default(uuid())
  alias     String   @unique
  user      User     @relation(fields: [user_id], references: [id])
  user_id   String
  group     Group    @relation(fields: [group_id], references: [id])
  group_id  String
  createdAt DateTime @default(now())
}

model Contribution {
  id                String   @id @default(uuid())
  group             Group    @relation(fields: [group_id], references: [id])
  group_id          String
  user              User     @relation(fields: [user_id], references: [id])
  user_id           String
  contribution_date DateTime
  createdAt         DateTime @default(now())
  updateAt          DateTime @updatedAt
}
